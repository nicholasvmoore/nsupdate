#!/bin/bash
#(c) 2014 Karl J. Vesterling && Nicholas V. Moore
#
# PURPOSE:
#
# Maintaining Current DNS:
# This script will go out and update A records to point to the new
# ip address.  It's a LOT like dyndns.org, however you can in fact
# create/remove/update any number of things, such as SRV records, or
# TXT records.
#
# Automatic IP6-in-IP4 Tunnel Endpoint configuration:
# The script currently uses wget in order to update the ip6-in-ip4
# tunnel endpoint to reflect the new internet addressable IP4 address
# we were assigned.
#
# Restart Communications:
# Some things need to be restarted in order for them to operate correcty.
# the script has a section where you can add/remove start/stop service
# statements.  This will probably be further refined by me such that a
# configuration file may be used instead.
# What it does currently is 

# if we don't have a config file, skip it.
if [ -r /etc/dhcp/do-nsupdate.conf ];
then
    # get the configuration values.
    source /etc/dhcp/do-nsupdate.conf;

    # If this an update for our external interface, this should be caught
	# by the hooks but just in case, you can find some of the variables
	# on the dhclient manpage http://linux.die.net/man/8/dhclient-script
    if [ "$interface" = "$EXTERNALINTERFACE" ];
    then
	case "$reason" in
	    BOUND|RENEW|REBIND)
		
		# Load the config file
		source /etc/dhcp/do-nsupdate.conf
		
		# This should probably have some more smarts to it, such as determining what the
		# default ip6 gateway is and attempting a ping6 to it instead of google.
		# That way we're not trying to fix a link that isn't broken due to DNS not
		# resolving or otherwise.  We're trusting a lot of elements to be in place and working.
		# Google is pretty stable, but it's not a 100% guarantee.
		if ping6 -c 1 ipv6.google.com;
		then
			echo "We have IP6 connectivity!"
		else
			echo "We do not have IP6 connectivity, I think I should perform a tunnel update."
			# First I bring down the IP6 interface to make sure that we're not going to try and
			# go out a broken link.
			ifdown he-ipv6
		
			# Now I update the Hurricane Electric endpoing IP
			curl -k -s "https://${TUNNELBROKERUSERNAME}:${TUNNELBROKERPASSWORD}@ipv4.tunnelbroker.net/nic/update?hostname=${TUNNELBROKERTUNNELID}"
			
			# Finally we bring the interface back up
			ifup he-ipv6

			# After bringing up the tunnel now we need to restart our strongswan tunnels because our IP changed
			strongswan restart
		fi
		
		# Perform the zone updates
		cat <<CEOF | nsupdate -k "$KEYFILE" -v
server $SERVER
zone $ZONE
update delete $HOSTNAME.$ZONE A
update add $HOSTNAME.$ZONE 300 A $new_ip_address
show
send
CEOF
		
	# I'm updating the endpoint yet again JUST IN CASE there is some sort of condition that
	# we're not catching/getting.  This will have the effect of updating the endpoint any time that
	# the DHCP server renews it's lease.
	#curl -k -s "https://${TUNNELBROKERUSERNAME}:${TUNNELBROKERPASSWORD}@ipv4.tunnelbroker.net/nic/update?hostname=${TUNNELBROKERTUNNELID}"
	;;
	esac
    fi
fi
